<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAKAC
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAOvh2ACmbSkAwMLBAEyx/wC0lGwAmXQ6APv79ACXczwA39bEANjK
        tQBVrv4AdDgDAFrF/wArqv8Ab9n/AJNsMgBHrf8AHKH/AFav/gD+/v4AIpLzALqfeQAxrv8A8+zkAFa7
        /wCigE0AM43AAFOt/gBNUVUAUbP/ALqPVgAxcbEA5eXlAFvC/wBZv/8AUrj/AEy2/wA4tf8A+vr2APn5
        +QD38u8A9/HvAD2j/wDv7eYAnnpEAFbA/wBTv/8AVLr/AJiYmABWsP4ASbP/AEuw/wBQrP4A9/j0APr5
        9QD78/IA8/HvAMOviQDf4OEAjt//AFq//wBUwP8AU73/AFS4/wBHsf8APqj/AEmv/wBOtP8AurCqAPv0
        8wDz8eoA+vr9AP3//wBQtv8A8/LrAPTy8AD6+/gA+vr5APr6+gA+pP8A39/gAFe9/wBv3v8A+vr7AFvB
        /wBWwv8A8/HrAE+1/wBau/8A+vv7AFS+/wB21/8AZqPHAPLx6gC1tbMAe9X/ADNVbADTwJ0AtolLAFy/
        /wApdL0AyKZ2AEKu/wBryP8Aftr/APr38gCzgUgAOrj/AHat3QCVbzkA/Pr8APj18ABHr/8A8e7hACdk
        lQD48+0AvpBYAGXG/wDi2scAnnxDADJOZADz7eoA0bqUAPjy8ADi1ccAdNn/AK6MXwBRvf8Ab+f/AL+/
        vwBNuP8A+/v8AE+7/wDVwaoAMrr/AGfa/wDu8vMA+Pr6APv7+ACocy0Agdf/AIba/wB13/8A5uHTAEu2
        /wBlyv8Ads//AIC61QBx5v8AR0lHAFtUUQAxb7AAJkBTAEes+ABru/8ARqv/AIeHhwDu6N4A8PP1ADKG
        sgBTf68AIKP/AGLi/wDBu7sAsYVFAOzs7AC+hEMAwZlnAPHw6AAabboA597UAKBmHwBOq/4AH5LsAKF9
        RwAyw/8AoXxNAPj47wBNtf8Aue3+ALeNeABXxf8A8uvjAAWD2ACdfEoA+v39AGPV/wCYcDcAU8z/ADqh
        /wBq1f8AWcD/AOvm2gBYwv8A2dzdAJWCdQD39O8AL4zGAMTExACaekIA4eDfANG8sgCdfEcAKU9qAK9+
        QABQu/8AS1hcAFi9/wD/5NMAdND/AMy4nADx7egAzLKGAPLv6gAnj+0AK2+cANrNtgCNjY0AkmwvAPrz
        8QBgxf8A4djIABiU/wC5iFQAXMH/AF/A/wBEsOUAXsP/ANzh4wA/vf8AXcP/AKmJVwDv6eUAaLjdAIvc
        /wDu5uAALYOsAPHu5ADx7+oAa+T/AG/L/wC8vLwA6M6/APT18AD29vMAqHg4AEuv/wA3s/8A//fzAE+5
        /wCRWAoA1cSnAPTy7AD///8A////AACgmCAgICAgIGWhDAbbEBAQELwGBgh4DAuPDw8PDw8PU1Nc+/7+
        /v7+/v7+/v7+GhMLK1BQUCsrQkISrCg5R0dHR9Ry7iz+CDIyEREREZycQTOiAk5M/f39/f3W71f+LTIT
        cUNDQ0NDM0GiAk5M/f39/f1LKSr+yxMZQwQEBAQ0kSUOAk5M/f39KcVGRtz+uRM9BEREREREJVsOAif0
        /f1LKjg3Rkv+rxPis1hYSkpK+j8OjCg5Vyk4agcHdOz1LQt2JSQkJCQkzsIX9v6LBwdNTU18LJCeLQto
        gxkZMDBAPy4XzUlIJ1RUhHAYAd4JyAvxhdBSUhkZLi4ma0lIT09NsukBdwr8bhyTgD0jIyMjVg34Y0lI
        T1pGGMEKOhZ/sRxgL+FVVSIiDQ1s4ElIWjYYAX06/qkFAByNW+TnZFlZIyImH0m6NrcBCYYWXgUAAByO
        Pt3diIGV8KPSdf7+b3qr2dPoGgAAABzrVpK74+0bG8a4p2J71WaoH6X2AAAAADU8tr/ql5YdHR3PYcx5
        ma6wh4ffAAAAADU85r1dtaRFRUVFRUXKxHNnBPcVAAAAADW0aX6U859RO1FRO+X5X9iawB4VAAAAAACt
        mx5t0f4o/v7+iv7+A6rXvhUAAAAAAAAAAAAAAMP+/p3y/onJAAAAAAAAAAAAAAAAAAAAAAAhFNrH/iEA
        AAAAAAAAAAAAAAAAAAAAAAAAgqZRggAAAAAAAAAAAAAAAAAAAAAAAAAAADExAAAAAAAAAAAAAAAAAIAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAHAAAA
        DwAAAA8AAAAPAAAADwCAAB8A/AP/AP4H/wD/D/8A/5//ACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAMoay/zFvsP8xcbH/MXGx/zFxsf8xcbH/MXGx/zJxsP8pdL3/U3+v/3Yy
        AP+bdjn/kmwv/5JsMv+SbDL/kmsy/5VsMf+YcDf/mHM6/5hzOv+Xcjn/nntC/m45APlVrv//dd///2/Y
        //9v2f//b9n//2/Z//9v2f//b9j//2/e//9v3v//dtf//5FYCv//////////////////////////////
        /////////////////////////////6CATv9Wr/7/Vq7+/zyj//8+pP//PqT//z6k//89o///PaL//z2o
        //8+qP//HKH//6BmH//5+fn/8/Hu//Px6v/z8er/8/Hq//Px6v/x7ej/8e7h//Hu5P/v7Ob//////5Zy
        Pf1WsP7/V7D+/0at//9Hrf//R63//0et//9GrP//Rqv//0ax//9Jsv//IKP//6dsKf/6+vn/9PLw//Ty
        7P/08uz/9PLs//Ty7P/08uz/8u/q//Hv6v/z8ev//////514Q/1WsP7/V6/+/0ev//9Jr///Sa///0mv
        //9Jr///Sa///0iz//9Hsf//H6L//6ZsJ//6+vn/9PLw//Ty7P/08uz/9PLs//Ty7P/08uz/8/Lr//fy
        7//28e7//////5x7Rv1Wr/7/V7v//0mv//9Msv//TLL//0ux//9Lsf//S7D//0u2//9Ntv//LKv//6Zt
        Kv/6+vn/9PLw//Ty7P/08uz/9PLs//fy7//39O//+/Tz//v08//68/H//////5x7Sf1Wr/7/Wr7//0yy
        //9OtP//TrT//060//9OtP//TrT//0y3//9Uvv//K6r//6ZvKv/6+fX/9PXw//Ty7P/08uz/8/Lr//fx
        7//68/L/+vj1//v08//z8uv//////6B8Rv1Vr/7/X8D//021//9Ptf//T7X//1C2//9Qtv//ULb//0+5
        //9TvP//Kqn//6hzLf/5+fj/8/Hv//Px6//38+//+/Py//r38v/6+/T/+/v1//jz7f/u5uD/9vbz/556
        Q/1Vrv7/Zcb//0y2//9TuP//Urj//1K4//9SuP//Urj//1C7//9Ywv//MK3//6p5O///////+/v4//v7
        9P/6+/T/+vv3//r7+P/6+/j/+PLw/+/t5f/m4dP/7uje/515Q/1Vrv7/a8j//024//9Wu///Vbv//1S6
        //9Uuf//VLj//1O9//9Xwf//Mq///69+QP/+////+vr9//r69v/6+vv/+vr7//v7/P/49fD/8+3k/+vh
        2P/h2Mj/3tfD/5l5Qf1Urv7/b8v//0+7//9Yvf//V73//1e9//9Wu///Vrr//1XA//9WwP//OLT//7OB
        SP/+////+vr9//r6+v/6+vr/+vv4//j47//v6eX/6+LZ/+Lax//YyLT/1cSn/5VvOf9Trf7/ds///1G9
        //9av///Wb///1m///9Zv///Wb///1bC//9bxv//N7P//7aJS//9////+vr9//r6+v/6+/v/+/Tz//Ps
        5P/r5tr/2Mu1/8Kuif+5nnr/roxf/6F8Tf9Trf7/e9X//1K///9cwf//W8H//1vB//9bwv//W8L//1nF
        //9bxf//Orj//7mIVP/9////+vr9//r7+//3+PP/8uzk/+rh2P/i1cf/w6+J///////x8Oj/tZVt/wAA
        AABTrf7/gdf//1O+//9ew///XcP//1y///9au///Wrv//1i///9aw///OLb//7uPV//9////+v39//f4
        9P/y6+P/6uHY/9/Vxf/Vwar/up93//Lx6v+yk2r/AAAAAAAAAABSrf7/htr//1TA//9hxf//X8X//2fa
        //9v5///ceb//2vk//9i4v//dND//76QWP////////////z6/P/z7er/597U/9rNtv/MuJz/qYlX/6OA
        TP8AAAAAAAAAAAAAAABSrf7/i9z//1bC//9lyv//Y9X//0Sw5f8tg6z/MovA/zOOwP8vjMb/BYPY/76E
        Q//TwJ3/0bqU/8yyhv/Ipnb/wZln/7mOVf+xhUX/pXc1/wAAAAAAAAAAAAAAAAAAAABRrP7/jt7//1fF
        //9q1f//aLjd/1tUUf9HSUf/TlBU/01QVv9NU1b/S1hc/zNVbP8pT2r/Mk5k/yZAU/8fkuz/MsP//zC7
        //8zuP//GJT//wAAAAAAAAAAAAAAAAAAAABQrP7/jt///z+9//9TzP//ZqPH/7eNeP/Bu7v/uLCq/7qw
        qv+6sKr/urCq/7qwqv+6sKr/0byy/5WCdf8nZJX/Qq7//02w//9Lr///I5Lz/wAAAAAAAAAAAAAAAAAA
        AABQrP7/ue3+/37a//902f//gLrV/+jOv//w8/X/3N7e/9/g4P/f3+D/39/g/9/g4f/c4eP///fz/7W1
        s/8rb5z/R6z4/1nA//9Ssv//I5Pz/wAAAAAAAAAAAAAAAAAAAAAAAAAATqv+/2u7//9Qs///dq3d///k
        0///////+fn5//////////////////j6+v///////////8DDwv8abbr/J4/t/zqh//8hkvP/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZ3N3///////////+Hh4f/vLy8////
        ///u8vP/4eDf/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5OTk//7+/v+NjY3/xMTE///////l5eX/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMDA
        wP/s7Oz/39/f/7+/v/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXl5f/mJiY/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABwAAAA8AAAAPAAAADwAAAA8AgAAfAPwD
        /wD+B/8A/w//AP+f/wA=
</value>
  </data>
</root>